spring:
  h2:
    console:
      enabled: true
      path: /h2
      settings:
        web-allow-others: true # AWS?? H2 ?? ??
  datasource:
    url: jdbc:h2:mem:test # test 부분을 자신이 원하는 것으로 바꾸시면 됩니다.
    username: sa # username과 password는 자신의 설정에 맞게
    password:
    driver-class-name: org.h2.Driver
  jpa:
    hibernate:
      ddl-auto: create  # (1) ??? ?? ??
    show-sql: true      # (2) SQL ?? ??
    properties:
      hibernate:
        format_sql: true  # (3) SQL pretty print
  sql:
    init:
      data-locations: classpath*:db/h2/data.sql
  security:
    oauth2:
      client:
        registration:
          google: # 구글 소셜 로그인
            clientId: ${GOOGLE_OAUTH_ID}
            clientSecret: ${GOOGLE_OAUTH_PW}
            scope:
              - email
              - profile
logging:
  level:
    org:
      springframework:
        orm:
          jpa: DEBUG
server:
  servlet:
    encoding:
      force-response: true
mail:
  address:
    admin: utest3912@gmail.com # admin mail address

jwt:
  key: ${JWT_SECRET_KEY}                # 민감한 정보는 시스템 환경 변수에서 로드한다.
  access-token-expiration-minutes: 30   # access-token 유효시간 : 30분
  refresh-token-expiration-minutes: 420 # sercret-token 유효시간 : 420분(7시간)

# s3 설정
cloud:
  aws:
    credentials: # IAM 사용자
      access-key: ${S3_CREDENTIALS_ACCESSKEY}
      secret-key: ${S3_CREDENTIALS_SECRETKEY}
    region:
      static: ap-northeast-2 # 버킷 지역설정 - 아시아 태평양(서울)
    stack:
      auto: false # Spring Cloud 실행 시, 서버 구성을 자동화하는 CloudFormation이 자동으로 실행되는데 이를 사용하지 않겠다는 설정
    s3:
      bucket: ${S3_BUCKET}